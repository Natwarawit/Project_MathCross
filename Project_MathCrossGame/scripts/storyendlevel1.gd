extends Control

@onready var storylabel = $StoryLabel  # เชื่อมต่อกับ node ที่ใช้แสดงข้อความใน UI (ในที่นี้คือ StoryLabel)
const loading = preload("res://scenes/loading.tscn")  # โหลดหน้าจอโหลด (loading screen)

# ตัวแปรเพื่อเก็บข้อความที่จะแสดง (เป็นข้อความที่อธิบายเรื่องราว)
var startstory = [
	"ด่านแรกนี่ไม่ได้ยากอย่างคิดแฮะ มอนเตอร์ก็ดูไม่ได้เก่งด้วย",
	"หน้าจอคอมพิวเตอร์กระพริบขึ้นมาและแสดงข้อความที่เขาไม่เคยพบเห็น:",
	"\"ยินดีต้อนรับสู่มิติคณิตศาสตร์! เพื่อหลุดออกจากที่นี่, คุณต้องแก้ปริศนาและทดสอบความรู้ของคุณในทุกๆ ด่าน\"",
	"อาร์ก้า: \"นี่มันอะไรกัน? ทำไมมันดูเหมือนโลกคณิตศาสตร์?\"",
	"เขายังไม่ทันจะตั้งตัวก็เกิดปรากฏการณ์แปลกๆ ขึ้น หน้าจอกระพริบรุนแรงจนเขาหมุนตัวไปมาจนรู้สึกเหมือนถูกดูดเข้าไปในแสงนั้น...",
	"ทันใดนั้น, ทุกสิ่งรอบตัวเขาก็หายไป เขารู้สึกเหมือนลอยอยู่ในอากาศ ก่อนจะตกลงไปในดินแดนที่เต็มไปด้วยแผนที่และปริศนาคณิตศาสตร์...",
	"เขายืนมองรอบตัวพบว่าตัวเองมาอยู่ในโลกแปลกใหม่ที่มีตารางคณิตศาสตร์ลอยอยู่เต็มไปหมด ทันทีที่เขาตั้งตัวได้, มีเสียงดังขึ้นมาจากในอากาศ:",
	"\"ยินดีต้อนรับสู่มิติคณิตศาสตร์, อาร์ก้า! ข้าคือ Mrosscath, ผู้ดูแลมิตินี้\"",
	"อาร์ก้า: \"มิติคณิตศาสตร์? ท่านคือใคร? ทำไมผมถึงมาอยู่ที่นี่?\"",
	"Mrosscath: \"ข้าคือผู้ที่ควบคุมโลกนี้... และท่านถูกดึงเข้ามาโดยบังเอิญ. 
	หากท่านต้องการกลับบ้าน, ท่านต้องแก้ปริศนาคณิตศาสตร์ที่ท้าทายซึ่งข้าจะส่งมาให้. ทุกด่านที่ท่านผ่านไปได้ จะนำท่านไปสู่ประตูแห่งการหลบหนี... แต่หากท่านล้มเหลว, ท่านจะติดอยู่ในมิตินี้ตลอดไป!\"",
	"อาร์ก้า: \"ปริศนาคณิตศาสตร์? แค่คณิตศาสตร์เหรอ? ผมไม่กลัวหรอก!\"",
	"Mrosscath: \"ดี! หากท่านมั่นใจ ข้าจะเริ่มต้นด้วยการทดสอบแรกของท่าน. ตอบคำถามคณิตศาสตร์ให้ถูกต้อง, แล้วท่านจะได้เดินทางไปยังด่านถัดไป... และในที่สุด ท่านอาจจะได้กลับบ้าน...\"",
	"จากนั้น, ตราราง Mathcross ที่เต็มไปด้วยปริศนาคณิตศาสตร์ก็ปรากฏขึ้นต่อหน้าอาร์ก้า เขาต้องรวบรวมความกล้าและใช้ทักษะคณิตศาสตร์ที่เขามีเพื่อเดินทางผ่านมันไป...",
	"อาร์ก้า: \"ผมจะต้องทำให้สำเร็จ... เพื่อกลับบ้าน!\"",
	"และเช่นนั้น, การผจญภัยในมิติคณิตศาสตร์ก็เริ่มต้นขึ้น..."
]

var current_index = 0  # ตัวแปรที่ใช้ติดตามตำแหน่งปัจจุบันของข้อความใน array startstory
var is_skipping = false  # ตัวแปรใช้ในการควบคุมการข้ามข้อความ

func _ready():
	add_child(storylabel)  # เพิ่ม StoryLabel เป็นลูกของ node นี้
	storylabel.text = ""  # เริ่มต้นโดยการไม่แสดงข้อความ
	# เริ่มการแสดงข้อความ
	show_next_message()  # เรียกฟังก์ชันเพื่อแสดงข้อความแรก

# ฟังก์ชันนี้จะทำงานเมื่อมีการคลิกเมาส์
func _input(event):
	if event is InputEventMouseButton and event.is_pressed() and !is_skipping:
		is_skipping = true  # ตั้งค่า is_skipping เป็น true เพื่อไม่ให้คลิกหลายครั้ง
		# ถ้ามีข้อความในเรื่องราวที่ยังไม่ได้แสดง
		if current_index < startstory.size():
			# แสดงข้อความถัดไป
			storylabel.text = startstory[current_index]
			current_index += 1  # ขยับตำแหน่งไปยังข้อความถัดไป
			is_skipping = false  # รีเซ็ตการข้ามข้อความ
		else:
			get_tree().change_scene_to_file("res://scenes/rest.tscn")

# ฟังก์ชันนี้ใช้แสดงข้อความทีละข้อความโดยอัตโนมัติ
func show_next_message():
	if current_index < startstory.size():
		is_skipping = false  # รีเซ็ตการข้ามเมื่อแสดงข้อความใหม่
		storylabel.text = startstory[current_index]  # แสดงข้อความปัจจุบัน
		current_index += 1  # ขยับไปยังข้อความถัดไป
		# ใช้ timer เพื่อแสดงข้อความถัดไปหลังจากเวลาผ่านไป 3 วินาที
		await get_tree().create_timer(3).timeout
		show_next_message()  # เรียกตัวเองเพื่อแสดงข้อความถัดไป
	else:
		get_tree().change_scene_to_file("res://scenes/rest.tscn")

# ฟังก์ชันนี้จะถูกเรียกเมื่อปุ่มใดๆ ถูกกด
func _on_button_pressed():
	get_tree().change_scene_to_file("res://scenes/rest.tscn")
